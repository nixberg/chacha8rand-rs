#![feature(array_chunks)]
#![feature(portable_simd)]

use core::simd::u32x4;

use rand_core::SeedableRng;
use rand_core::block::{BlockRng, BlockRngCore};

pub type ChaCha8Rand = BlockRng<ChaCha8RandCore>;

pub struct ChaCha8RandCore {
    seed: [u32; 8],
}

impl BlockRngCore for ChaCha8RandCore {
    type Item = u32;
    type Results = Buffer; // Workaround until [u32; 248] implements Default.

    fn generate(&mut self, results: &mut Self::Results) {
        let (chunks, last_chunk) = results.0.as_chunks_mut::<64>();

        let state = expand_seed::<00>(&self.seed);
        copy_from_state::<00, 64>(&state, &mut chunks[0]);

        let state = expand_seed::<04>(&self.seed);
        copy_from_state::<00, 64>(&state, &mut chunks[1]);

        let state = expand_seed::<08>(&self.seed);
        copy_from_state::<00, 64>(&state, &mut chunks[2]);

        let state = expand_seed::<12>(&self.seed);
        copy_from_state::<00, 56>(&state, last_chunk.try_into().unwrap());
        copy_from_state::<14, 08>(&state, &mut self.seed);
    }
}

impl SeedableRng for ChaCha8RandCore {
    type Seed = [u8; 32];

    fn from_seed(seed: Self::Seed) -> Self {
        let chunks: &[_; 8] = seed.as_chunks::<4>().0.try_into().unwrap();
        Self {
            seed: [
                u32::from_le_bytes(chunks[0]),
                u32::from_le_bytes(chunks[1]),
                u32::from_le_bytes(chunks[2]),
                u32::from_le_bytes(chunks[3]),
                u32::from_le_bytes(chunks[4]),
                u32::from_le_bytes(chunks[5]),
                u32::from_le_bytes(chunks[6]),
                u32::from_le_bytes(chunks[7]),
            ],
        }
    }
}

pub struct Buffer([u32; 248]);

impl AsRef<[u32]> for Buffer {
    fn as_ref(&self) -> &[u32] {
        self.0.as_ref()
    }
}

impl AsMut<[u32]> for Buffer {
    fn as_mut(&mut self) -> &mut [u32] {
        self.0.as_mut()
    }
}

impl Default for Buffer {
    fn default() -> Self {
        Self([0; 248])
    }
}

fn expand_seed<const COUNTER: u32>(seed: &[u32; 8]) -> [u32x4; 16] {
    let mut state = [
        u32x4::splat(0x61707865),
        u32x4::splat(0x3320646e),
        u32x4::splat(0x79622d32),
        u32x4::splat(0x6b206574),
        u32x4::splat(seed[0]),
        u32x4::splat(seed[1]),
        u32x4::splat(seed[2]),
        u32x4::splat(seed[3]),
        u32x4::splat(seed[4]),
        u32x4::splat(seed[5]),
        u32x4::splat(seed[6]),
        u32x4::splat(seed[7]),
        u32x4::splat(COUNTER) + u32x4::from_array([0, 1, 2, 3]),
        u32x4::splat(0),
        u32x4::splat(0),
        u32x4::splat(0),
    ];

    for _ in 0..4 {
        quarter_round::<00, 04, 08, 12>(&mut state);
        quarter_round::<01, 05, 09, 13>(&mut state);
        quarter_round::<02, 06, 10, 14>(&mut state);
        quarter_round::<03, 07, 11, 15>(&mut state);

        quarter_round::<00, 05, 10, 15>(&mut state);
        quarter_round::<01, 06, 11, 12>(&mut state);
        quarter_round::<02, 07, 08, 13>(&mut state);
        quarter_round::<03, 04, 09, 14>(&mut state);
    }

    state[04] += u32x4::splat(seed[0]);
    state[05] += u32x4::splat(seed[1]);
    state[06] += u32x4::splat(seed[2]);
    state[07] += u32x4::splat(seed[3]);
    state[08] += u32x4::splat(seed[4]);
    state[09] += u32x4::splat(seed[5]);
    state[10] += u32x4::splat(seed[6]);
    state[11] += u32x4::splat(seed[7]);

    state
}

fn copy_from_state<const OFFSET: usize, const COUNT: usize>(
    source: &[u32x4; 16],
    destination: &mut [u32; COUNT],
) {
    for (lhs, rhs) in destination
        .array_chunks_mut::<4>()
        .zip(source.iter().skip(OFFSET))
    {
        lhs.copy_from_slice(rhs.as_array());
    }
}

fn quarter_round<const A: usize, const B: usize, const C: usize, const D: usize>(
    state: &mut [u32x4; 16],
) {
    state[A] += state[B];
    state[D] ^= state[A];
    state[D] = rotate_left::<16>(state[D]);

    state[C] += state[D];
    state[B] ^= state[C];
    state[B] = rotate_left::<12>(state[B]);

    state[A] += state[B];
    state[D] ^= state[A];
    state[D] = rotate_left::<08>(state[D]);

    state[C] += state[D];
    state[B] ^= state[C];
    state[B] = rotate_left::<07>(state[B]);
}

fn rotate_left<const OFFSET: u32>(x: u32x4) -> u32x4 {
    x << OFFSET | x >> (u32::BITS - OFFSET)
}

#[cfg(test)]
mod tests {
    use rand_core::{RngCore, SeedableRng};

    use super::ChaCha8Rand;

    #[test]
    fn it_works_fill() {
        let mut generator = ChaCha8Rand::from_seed(SEED);
        let mut bytes = [0; 2976];
        generator.fill_bytes(&mut bytes);
        assert_eq!(bytes, EXPECTED_OUTPUT);
    }

    #[test]
    fn it_works_u32() {
        let mut generator = ChaCha8Rand::from_seed(SEED);
        for chunk in EXPECTED_OUTPUT.array_chunks::<4>() {
            assert_eq!(generator.next_u32(), u32::from_le_bytes(*chunk));
        }
    }

    #[test]
    fn it_works_u64() {
        let mut generator = ChaCha8Rand::from_seed(SEED);
        for chunk in EXPECTED_OUTPUT.array_chunks::<8>() {
            assert_eq!(generator.next_u64(), u64::from_le_bytes(*chunk));
        }
    }

    const SEED: [u8; 32] = *b"ABCDEFGHIJKLMNOPQRSTUVWXYZ123456";

    const EXPECTED_OUTPUT: [u8; 2976] = [
        0xa5, 0x16, 0x46, 0x3d, 0x06, 0xb6, 0x73, 0xb7, 0x3c, 0xbc, 0x6a, 0xa6, 0x22, 0xaf, 0x60,
        0x11, 0x7c, 0x28, 0x8d, 0x41, 0xd9, 0x99, 0x25, 0x8c, 0xd6, 0x5c, 0xdc, 0x7e, 0x03, 0x7e,
        0xe0, 0x7e, 0xad, 0x16, 0x1c, 0x2d, 0xe0, 0x9e, 0xaa, 0xcf, 0x79, 0xea, 0xeb, 0x8f, 0xef,
        0x0e, 0x09, 0x0e, 0x3e, 0x5b, 0x8b, 0x12, 0x71, 0xd2, 0x82, 0x3c, 0x4f, 0xa3, 0x52, 0x12,
        0xc1, 0xdd, 0x5a, 0x9c, 0xa6, 0xee, 0x6c, 0x7d, 0x61, 0xbb, 0x79, 0xdf, 0x6a, 0x73, 0x9d,
        0x1f, 0x59, 0x53, 0xd5, 0x36, 0x1f, 0xe0, 0x1e, 0x18, 0x4e, 0xd1, 0xf0, 0xee, 0x36, 0x84,
        0xe5, 0x0a, 0x76, 0xfc, 0x9b, 0x08, 0x68, 0xd2, 0x2a, 0xcc, 0x59, 0x2b, 0xe5, 0xd9, 0xba,
        0x8a, 0x1b, 0x4b, 0x44, 0xb4, 0x2f, 0xeb, 0x61, 0x66, 0xc4, 0x92, 0xa6, 0xc8, 0x95, 0x4f,
        0x2c, 0xe6, 0xca, 0x17, 0x32, 0x32, 0xc6, 0xc3, 0x7e, 0x2e, 0x4e, 0x7f, 0x36, 0xb4, 0xeb,
        0x91, 0xc6, 0x9b, 0xec, 0xa0, 0xc6, 0xf2, 0x4c, 0x78, 0x20, 0xbe, 0xea, 0x34, 0x5c, 0xec,
        0x34, 0x5c, 0xa8, 0xda, 0x70, 0x55, 0x51, 0x8f, 0x0a, 0x4f, 0xf2, 0x6b, 0x3d, 0x11, 0xb4,
        0xdc, 0x35, 0xfc, 0xbc, 0x54, 0x55, 0x64, 0x4c, 0xa4, 0x0d, 0x5b, 0xe1, 0xd9, 0x21, 0xdb,
        0xa3, 0x3d, 0x96, 0x6d, 0xf3, 0x00, 0xe5, 0x50, 0x31, 0xfc, 0xae, 0xee, 0xa5, 0x50, 0x37,
        0xda, 0x3d, 0x92, 0x37, 0x2d, 0xb0, 0xc8, 0x4b, 0x6d, 0x62, 0x7a, 0x0d, 0x38, 0x49, 0xee,
        0xd7, 0xe3, 0xed, 0x68, 0xaf, 0xee, 0x7c, 0x71, 0x3b, 0x88, 0x95, 0x66, 0x35, 0xf4, 0xa4,
        0x95, 0x24, 0x39, 0x21, 0x90, 0x6a, 0x84, 0x1b, 0xa6, 0x30, 0x96, 0x54, 0x10, 0x85, 0x8e,
        0x93, 0xe4, 0xba, 0x5d, 0x54, 0x02, 0xdc, 0x18, 0x43, 0x3d, 0x5a, 0xa6, 0xf0, 0x9f, 0x8f,
        0x0f, 0x80, 0xf0, 0x0f, 0x19, 0xf7, 0x65, 0xf0, 0xcc, 0x30, 0x33, 0x67, 0x39, 0xaa, 0xd1,
        0x76, 0xfd, 0x33, 0x64, 0xba, 0x6c, 0x93, 0x32, 0xd2, 0x95, 0x17, 0xbd, 0x0c, 0x07, 0xd1,
        0x56, 0x74, 0x6c, 0x62, 0x65, 0x8c, 0xff, 0xda, 0xcf, 0x2a, 0x46, 0x6a, 0xfc, 0x34, 0x6d,
        0x86, 0xab, 0xaf, 0x5b, 0x88, 0x29, 0x0a, 0x03, 0x78, 0x2f, 0x86, 0x0c, 0x3d, 0x16, 0xc3,
        0x07, 0xe4, 0x83, 0x9a, 0xd3, 0xbf, 0x2e, 0xf2, 0x45, 0x7b, 0x2b, 0x0a, 0xc0, 0xa9, 0xb1,
        0x66, 0x24, 0xc6, 0x07, 0x43, 0x56, 0xd4, 0x72, 0xc0, 0xb0, 0x24, 0x04, 0x7e, 0x25, 0xfe,
        0x28, 0x6c, 0x49, 0x99, 0x5e, 0xb5, 0x6f, 0xe0, 0xd4, 0x5c, 0x8f, 0xa8, 0x73, 0x98, 0xae,
        0x73, 0x37, 0x0d, 0xc6, 0x2a, 0x36, 0x57, 0x46, 0x8e, 0x3e, 0xf2, 0xcd, 0x1e, 0xf9, 0x83,
        0x1c, 0xc0, 0x87, 0x53, 0xc1, 0x92, 0x07, 0xdc, 0x6f, 0x5c, 0x2b, 0xfd, 0x0d, 0xa3, 0xd2,
        0xda, 0x36, 0xb7, 0xbd, 0x95, 0x05, 0x29, 0x93, 0xb5, 0xa4, 0xc5, 0x02, 0xcc, 0xe4, 0x34,
        0x89, 0xe1, 0x4d, 0xa7, 0xe3, 0x15, 0xf0, 0x04, 0xd6, 0xc0, 0xcd, 0x21, 0x03, 0xd8, 0x9a,
        0xf6, 0xdb, 0xa0, 0xfb, 0x87, 0xde, 0x39, 0xd1, 0xa3, 0xbe, 0xe8, 0x60, 0x56, 0x87, 0xf4,
        0x1e, 0x85, 0x4d, 0x8a, 0xd1, 0x4a, 0xf3, 0x15, 0x22, 0x7c, 0x44, 0x66, 0x63, 0xee, 0x07,
        0xd0, 0xd3, 0x97, 0x2e, 0x68, 0x05, 0xb2, 0x4a, 0xd5, 0xc6, 0x78, 0x89, 0x0e, 0x4c, 0xc2,
        0xed, 0x12, 0x67, 0x6a, 0x9f, 0x1e, 0xcf, 0xd3, 0xcf, 0x80, 0x4c, 0x41, 0x39, 0x14, 0x06,
        0xad, 0x0e, 0x5c, 0x74, 0xe2, 0xb6, 0xa8, 0xd1, 0xe8, 0x10, 0xc4, 0x45, 0x8d, 0x91, 0xa7,
        0x31, 0xec, 0x6e, 0x21, 0x90, 0xad, 0x61, 0xcc, 0xab, 0x1a, 0xa7, 0x32, 0x20, 0x2d, 0xd9,
        0x40, 0x40, 0x68, 0xcd, 0x40, 0xfb, 0x6f, 0xf6, 0xd2, 0x3c, 0x7a, 0x85, 0x95, 0x72, 0xc0,
        0x51, 0xd0, 0xdc, 0x7e, 0x52, 0xab, 0xd9, 0xbc, 0x5c, 0xb5, 0xea, 0xac, 0xda, 0x1b, 0x78,
        0xce, 0x1d, 0x47, 0x18, 0x52, 0x72, 0xdc, 0x44, 0xd1, 0x8c, 0xf0, 0xf7, 0xd1, 0x40, 0x7f,
        0x3d, 0xb1, 0xe0, 0x04, 0x58, 0x5b, 0xd3, 0xb2, 0xe4, 0x46, 0xa4, 0xb1, 0x5c, 0x06, 0x8a,
        0x13, 0xd2, 0x28, 0xa7, 0xd4, 0xe6, 0xd8, 0xda, 0x60, 0xca, 0x40, 0x3e, 0x22, 0x05, 0x68,
        0x6a, 0xac, 0x06, 0x32, 0xec, 0x61, 0x2d, 0xb8, 0x17, 0x4c, 0x87, 0x56, 0x23, 0x69, 0xab,
        0x1c, 0xde, 0x76, 0x76, 0x41, 0x54, 0x09, 0xc3, 0x24, 0x56, 0x22, 0x32, 0x37, 0xce, 0x1a,
        0x4f, 0x38, 0x83, 0x98, 0x13, 0x08, 0x51, 0xa9, 0xfb, 0x11, 0x2e, 0x75, 0x52, 0x0f, 0x20,
        0x7f, 0x99, 0xfa, 0x21, 0x62, 0xe8, 0xaf, 0xaa, 0x16, 0x11, 0x19, 0x35, 0xa1, 0xb2, 0x5c,
        0x3b, 0xce, 0x07, 0x14, 0x83, 0x45, 0xbc, 0x72, 0xbc, 0x56, 0x29, 0x78, 0xeb, 0x40, 0x61,
        0x92, 0xb7, 0x88, 0x41, 0x4d, 0xea, 0xad, 0xd4, 0xbf, 0x6d, 0xca, 0x56, 0xe5, 0x0c, 0x34,
        0x49, 0x23, 0xc2, 0xe3, 0x7f, 0x8a, 0x5f, 0x67, 0x37, 0x9c, 0x8f, 0xc0, 0x35, 0x21, 0xd5,
        0x5e, 0xef, 0xfb, 0xc7, 0xe1, 0x11, 0x75, 0xbc, 0xc1, 0x4e, 0x46, 0xc8, 0xad, 0x98, 0xf8,
        0x03, 0x12, 0x3d, 0xc7, 0xb2, 0x63, 0xd1, 0xf3, 0xf3, 0xa2, 0x43, 0xe0, 0x1e, 0x76, 0x8c,
        0xb7, 0xd7, 0xec, 0xcc, 0x6a, 0x9d, 0xb9, 0x24, 0x70, 0x03, 0x2f, 0x11, 0xaa, 0x31, 0x3e,
        0x79, 0x39, 0x51, 0x28, 0x19, 0x2a, 0xdc, 0x87, 0x8e, 0x25, 0x6e, 0x09, 0xf7, 0x04, 0xae,
        0x47, 0x42, 0x0f, 0xe2, 0x6f, 0x92, 0x22, 0x31, 0x4f, 0x51, 0xe9, 0xa7, 0xd2, 0x45, 0xf0,
        0xb3, 0x6f, 0xdc, 0xba, 0x8e, 0xd1, 0xcd, 0xce, 0x30, 0xcb, 0x15, 0x74, 0x02, 0x90, 0xf6,
        0xec, 0xfd, 0xc7, 0xcb, 0x21, 0xa0, 0x8b, 0xdc, 0x96, 0xc6, 0xb5, 0x3f, 0xe6, 0x74, 0xd2,
        0xc8, 0x17, 0x44, 0x66, 0xd1, 0x78, 0x72, 0x45, 0xea, 0x45, 0xe4, 0xf7, 0x05, 0x57, 0xb6,
        0x9d, 0x1b, 0xca, 0xbb, 0x20, 0xf9, 0x99, 0xcb, 0x22, 0xda, 0xb4, 0x50, 0x19, 0x0c, 0x92,
        0xe2, 0x09, 0xaf, 0xf1, 0xba, 0x75, 0xf8, 0x38, 0xf8, 0x50, 0x42, 0xb8, 0xd7, 0xd3, 0xbe,
        0x60, 0x41, 0xd7, 0x0f, 0x08, 0xe8, 0x98, 0xf1, 0x03, 0xa7, 0x7e, 0x9b, 0x1d, 0xa5, 0xed,
        0xc9, 0xf6, 0xf8, 0x9b, 0x43, 0x55, 0xef, 0x09, 0xf7, 0xfc, 0x16, 0xf1, 0xeb, 0xfe, 0x74,
        0x0c, 0xd2, 0x46, 0x75, 0x6d, 0x14, 0xeb, 0x68, 0x56, 0x30, 0x87, 0x97, 0xd8, 0x10, 0xec,
        0xf3, 0x9a, 0x82, 0xbc, 0x1d, 0x55, 0x7b, 0x69, 0xf9, 0xb8, 0x15, 0xc9, 0xb8, 0x64, 0x8e,
        0x6c, 0x3c, 0x82, 0xfc, 0xbc, 0x40, 0x3b, 0x18, 0xe8, 0x85, 0x55, 0x34, 0x68, 0x13, 0x58,
        0xd6, 0x71, 0x41, 0x4b, 0x67, 0xf7, 0xe9, 0x70, 0xd6, 0x1c, 0xd8, 0x34, 0x12, 0x19, 0x5e,
        0xa5, 0xd8, 0x10, 0x52, 0x50, 0x0e, 0xdc, 0xa0, 0xec, 0xee, 0x69, 0x8d, 0x25, 0xe8, 0x7e,
        0xf6, 0xba, 0xe8, 0x52, 0xc4, 0xd4, 0x05, 0x99, 0x55, 0xa4, 0x16, 0x01, 0xe3, 0xdb, 0xe8,
        0x00, 0x6f, 0x17, 0xb1, 0xe1, 0x8c, 0xf0, 0x1c, 0x49, 0xcb, 0x1e, 0xb8, 0xa4, 0xd0, 0xf7,
        0xcc, 0x0e, 0x43, 0x2c, 0x6b, 0x13, 0xea, 0x3f, 0x30, 0x71, 0xc8, 0x06, 0x9c, 0x13, 0x6c,
        0x1d, 0x86, 0x87, 0x04, 0x5e, 0xe0, 0x72, 0xdf, 0x41, 0x5f, 0x1d, 0x6b, 0xe2, 0x1a, 0x1e,
        0x7e, 0xbd, 0x25, 0x1d, 0xa4, 0x62, 0xd6, 0x04, 0x40, 0x9f, 0xbe, 0x46, 0x85, 0x18, 0x83,
        0xd4, 0x58, 0xbf, 0x65, 0xcc, 0x13, 0xdb, 0x69, 0xff, 0x7c, 0xb2, 0xd1, 0x36, 0xbb, 0xc1,
        0x72, 0x33, 0x66, 0xa6, 0x01, 0x4d, 0x7f, 0x72, 0x7b, 0x57, 0xd7, 0x8d, 0x57, 0xf6, 0x3c,
        0x08, 0x6c, 0x06, 0x8f, 0xc7, 0x19, 0xbb, 0x91, 0xc3, 0xf9, 0xd4, 0x14, 0xe0, 0xdb, 0xb3,
        0xff, 0x13, 0x1d, 0xdd, 0xb2, 0xfb, 0x97, 0x4f, 0x8d, 0xef, 0xf9, 0x0a, 0x1e, 0xc9, 0x31,
        0xba, 0x43, 0x2a, 0x40, 0x98, 0xfc, 0x4d, 0x09, 0x52, 0xb7, 0x37, 0xea, 0x1b, 0xd6, 0x9b,
        0x06, 0xca, 0x86, 0xd9, 0xe8, 0x62, 0xd7, 0x72, 0x5b, 0x85, 0xbc, 0x04, 0x59, 0x86, 0x31,
        0xee, 0x72, 0x3e, 0xc3, 0x36, 0xcd, 0xc5, 0xfd, 0xf5, 0xd1, 0xad, 0x7c, 0x94, 0xa8, 0x80,
        0x49, 0x9b, 0xba, 0x43, 0xab, 0x49, 0xac, 0x5e, 0xf0, 0xe8, 0xec, 0xe7, 0x38, 0xae, 0xab,
        0x84, 0x11, 0xfe, 0x65, 0x52, 0x14, 0xd3, 0xa5, 0xde, 0xb9, 0x7c, 0x2d, 0xe3, 0x67, 0xe4,
        0x76, 0x94, 0x48, 0x71, 0xcc, 0x8c, 0xc6, 0x78, 0xa5, 0x58, 0xa2, 0x03, 0x4c, 0xfc, 0xd8,
        0x0f, 0xcb, 0x9e, 0xdf, 0xef, 0x00, 0x6d, 0x66, 0xe2, 0x71, 0xd4, 0xca, 0x24, 0x99, 0xe9,
        0x65, 0xf7, 0x18, 0x83, 0x66, 0xf8, 0x87, 0xd8, 0xf5, 0x55, 0x1b, 0x7c, 0xc5, 0x4d, 0xcb,
        0x59, 0x48, 0x60, 0x86, 0x5a, 0x83, 0x73, 0xd3, 0x82, 0xe4, 0x40, 0x55, 0x8b, 0x56, 0x26,
        0xe5, 0xec, 0x6f, 0x58, 0x08, 0x0f, 0x04, 0x39, 0x1f, 0xe6, 0xf8, 0x93, 0x02, 0xf0, 0xf3,
        0x64, 0xb7, 0xa8, 0x50, 0xbd, 0xf6, 0xa2, 0x43, 0x94, 0x04, 0x1a, 0x94, 0xd3, 0x97, 0x86,
        0xc8, 0xfe, 0x76, 0xa2, 0xe7, 0xba, 0x39, 0xd0, 0x70, 0xfb, 0x3e, 0xa8, 0xa8, 0xec, 0x68,
        0x13, 0x61, 0xf4, 0xe2, 0x25, 0x24, 0x1d, 0xe0, 0x96, 0x7a, 0x00, 0x7c, 0xbf, 0xc5, 0x69,
        0x8e, 0x76, 0xe5, 0xcc, 0xbb, 0xc3, 0xaa, 0x42, 0x5c, 0x98, 0xb4, 0x4f, 0x78, 0x74, 0x38,
        0x22, 0xaa, 0x91, 0x50, 0x2b, 0xf7, 0x07, 0x2e, 0xe6, 0xb1, 0x3f, 0x33, 0x30, 0x36, 0xde,
        0xb8, 0xbb, 0xde, 0xeb, 0x19, 0x73, 0x8e, 0x00, 0xfa, 0x59, 0xa9, 0xbc, 0x82, 0x39, 0x2a,
        0xb3, 0xa9, 0x4b, 0x96, 0x9f, 0x8b, 0xb9, 0xb2, 0x51, 0x19, 0xb7, 0xad, 0x14, 0x10, 0xe3,
        0xf7, 0x82, 0xcc, 0x3a, 0x70, 0xa3, 0xfc, 0xd0, 0xeb, 0x9a, 0x41, 0xe6, 0x2f, 0x2a, 0x4e,
        0x65, 0xec, 0x2c, 0x2e, 0xa5, 0x55, 0x2d, 0x13, 0x26, 0xb3, 0x78, 0x29, 0x50, 0x44, 0x7f,
        0xc5, 0x48, 0x22, 0x16, 0xaf, 0x2d, 0x34, 0x2f, 0x0c, 0x71, 0x32, 0xec, 0x2b, 0xcb, 0x5a,
        0x7b, 0xb4, 0x17, 0x05, 0x37, 0x09, 0x27, 0xca, 0x8f, 0x71, 0x7a, 0x4c, 0x41, 0xc5, 0xbc,
        0xd0, 0xbe, 0x42, 0x91, 0xd6, 0x88, 0xce, 0x52, 0xff, 0xb8, 0xbc, 0x0e, 0xe4, 0xd4, 0x28,
        0xf8, 0xc9, 0xdb, 0xa2, 0x44, 0x3e, 0x58, 0x3f, 0x87, 0x8f, 0x4f, 0x2f, 0x4c, 0xc7, 0x5b,
        0xe4, 0x99, 0xb7, 0x8e, 0x64, 0xbf, 0x3d, 0xf8, 0x86, 0x0e, 0xee, 0x75, 0x24, 0xf2, 0x33,
        0x65, 0x7f, 0xd4, 0x16, 0xee, 0xf9, 0xb4, 0x1e, 0xe3, 0x44, 0x27, 0x71, 0xb8, 0xd2, 0xf8,
        0x40, 0x72, 0x45, 0xb1, 0x3c, 0xda, 0xb4, 0x86, 0xb8, 0x4d, 0xf6, 0xd6, 0xbd, 0x6f, 0x32,
        0x86, 0x20, 0xb9, 0x82, 0xd8, 0x7d, 0x90, 0xe5, 0x3d, 0xcc, 0xdf, 0x09, 0xe9, 0x5e, 0x9a,
        0xb4, 0xe8, 0xa2, 0x10, 0x4c, 0x96, 0x23, 0x78, 0x8e, 0xfb, 0xdb, 0xd5, 0xf8, 0x0d, 0xef,
        0x89, 0x60, 0xdd, 0x70, 0x9f, 0xc9, 0xd9, 0xcd, 0x63, 0x16, 0x14, 0x30, 0x65, 0x03, 0x24,
        0x5c, 0x32, 0x05, 0xb8, 0x04, 0xd6, 0x12, 0xac, 0x14, 0x03, 0xd8, 0x83, 0x74, 0xf9, 0xf5,
        0xa7, 0x1a, 0xb9, 0x1c, 0x27, 0x2b, 0xf0, 0xdd, 0xab, 0x62, 0x53, 0x24, 0xe2, 0x97, 0xab,
        0x9f, 0x2a, 0x23, 0x14, 0xf6, 0x84, 0x5a, 0xa2, 0x7f, 0x4b, 0xda, 0xfc, 0x25, 0x11, 0xf7,
        0x67, 0x72, 0xb2, 0x74, 0x1d, 0xa6, 0xa5, 0x1c, 0x45, 0xcb, 0xdb, 0x3a, 0x9b, 0x6a, 0xcc,
        0x38, 0x39, 0x3e, 0x65, 0xdc, 0x85, 0xbb, 0xe1, 0xdd, 0xd4, 0x9f, 0xf8, 0x64, 0xfa, 0xc8,
        0xd0, 0xe9, 0x88, 0x41, 0x2b, 0xcd, 0x1e, 0xfb, 0xc5, 0x02, 0xe5, 0x56, 0x57, 0xca, 0x7b,
        0x13, 0xbd, 0xf2, 0x55, 0xe1, 0x1b, 0x12, 0x5d, 0xe2, 0xef, 0xad, 0x8e, 0x3a, 0x89, 0x5d,
        0x3c, 0x1c, 0xcd, 0x56, 0xb9, 0x5b, 0xb6, 0xbe, 0x37, 0xd3, 0x50, 0x4c, 0x67, 0xf5, 0x5c,
        0x67, 0x51, 0x51, 0x8c, 0x91, 0x1e, 0x6a, 0xb5, 0xcf, 0xff, 0x49, 0xa6, 0xab, 0xcd, 0x47,
        0x22, 0x6a, 0xb2, 0x4a, 0xc7, 0x20, 0xda, 0x08, 0x3c, 0x85, 0xac, 0x6b, 0x16, 0x71, 0x5d,
        0xfc, 0x84, 0xe5, 0xe2, 0xef, 0x7b, 0xb0, 0x32, 0xbf, 0x8d, 0x58, 0x2a, 0xff, 0x45, 0xda,
        0x5e, 0x09, 0x75, 0x4d, 0x3c, 0xb0, 0x98, 0xdb, 0x4c, 0x5a, 0xa6, 0xaa, 0xe1, 0x5a, 0x28,
        0x60, 0xb8, 0x40, 0x31, 0x26, 0x6a, 0x68, 0x3b, 0xf9, 0x0e, 0x18, 0x1c, 0xee, 0x52, 0x97,
        0x46, 0xde, 0xae, 0x9a, 0x12, 0x04, 0xdc, 0x32, 0xc2, 0xce, 0x04, 0xea, 0x35, 0x18, 0xaa,
        0x6b, 0x91, 0xeb, 0xff, 0x88, 0x43, 0xb6, 0xc8, 0x21, 0x9c, 0xd4, 0x88, 0x48, 0x86, 0x58,
        0x96, 0x2d, 0xa8, 0x72, 0xa8, 0x66, 0xac, 0x7e, 0xef, 0x48, 0x33, 0x00, 0xeb, 0x09, 0xb2,
        0x55, 0xe6, 0x67, 0x6f, 0x7f, 0x25, 0x1b, 0x94, 0x7a, 0x0b, 0xfb, 0x2f, 0x53, 0xde, 0xee,
        0x8d, 0x12, 0xe6, 0xad, 0x40, 0xd9, 0x23, 0xfe, 0x89, 0xaf, 0xa1, 0xf2, 0x24, 0xdf, 0xe0,
        0x5a, 0x19, 0x88, 0x49, 0x3b, 0xaa, 0x95, 0x4a, 0xbe, 0x94, 0x4f, 0x40, 0x49, 0xa6, 0x3d,
        0x27, 0x7e, 0x3f, 0x2c, 0x13, 0xad, 0x2d, 0x69, 0xb8, 0x9e, 0xaa, 0xca, 0x6e, 0xe7, 0xae,
        0x40, 0x24, 0x50, 0x65, 0x09, 0x1e, 0xa0, 0x94, 0x12, 0xf5, 0xe4, 0xa4, 0xdb, 0xab, 0x97,
        0xf7, 0x6d, 0x32, 0x70, 0x1d, 0x4c, 0x02, 0xb6, 0x2f, 0xea, 0xfc, 0x89, 0x54, 0x29, 0x92,
        0x04, 0x4e, 0x5f, 0x6a, 0xe0, 0x22, 0xea, 0x14, 0x29, 0x97, 0x57, 0x73, 0xd4, 0xaa, 0x33,
        0xd1, 0x37, 0x81, 0x9a, 0xf3, 0xf2, 0xcd, 0xe7, 0x6a, 0xdd, 0xe6, 0xa2, 0x47, 0x66, 0x08,
        0x18, 0x4f, 0x64, 0x42, 0x9f, 0x3e, 0xbd, 0x70, 0xc1, 0x01, 0x33, 0xd0, 0x16, 0x6d, 0x65,
        0x46, 0xa5, 0x6f, 0x41, 0x8c, 0x90, 0x3e, 0x12, 0x2e, 0xe2, 0x3b, 0x50, 0x81, 0xe0, 0x72,
        0xcc, 0xc4, 0x16, 0x91, 0xf0, 0x7c, 0x07, 0x29, 0xf2, 0xb7, 0x64, 0xd2, 0x5c, 0xd2, 0xcb,
        0x31, 0x40, 0x59, 0xec, 0x68, 0xf4, 0xb2, 0x3d, 0xd5, 0xad, 0x9b, 0x4c, 0x73, 0x0e, 0xc0,
        0x46, 0x61, 0xd8, 0x75, 0x20, 0xc7, 0x0a, 0xec, 0xd0, 0x30, 0x76, 0x0b, 0xf8, 0x3c, 0xcb,
        0x37, 0x30, 0xc6, 0x21, 0x27, 0x3a, 0x7b, 0x3d, 0x4c, 0x57, 0x4b, 0x82, 0x76, 0x00, 0x6a,
        0x90, 0x99, 0xae, 0x70, 0x2e, 0x53, 0x8b, 0x41, 0xa5, 0x75, 0xb1, 0xdd, 0x1d, 0x23, 0xee,
        0x51, 0xe2, 0xb3, 0xd8, 0x66, 0x19, 0xca, 0x5d, 0xc2, 0xee, 0x33, 0xb4, 0x93, 0x9a, 0xff,
        0x5c, 0xdc, 0x30, 0x0f, 0x53, 0x35, 0xd3, 0x3c, 0xb5, 0x98, 0x3d, 0xf0, 0x9f, 0xdf, 0x8c,
        0x55, 0x76, 0x50, 0x22, 0xc4, 0xaf, 0x2a, 0x40, 0x84, 0x82, 0xa2, 0xd3, 0x81, 0xef, 0x28,
        0x0a, 0x11, 0x1c, 0xf5, 0xdb, 0x0b, 0x11, 0xf6, 0xe8, 0x27, 0xd0, 0x55, 0xb2, 0xe1, 0x9a,
        0x32, 0x83, 0x68, 0x24, 0xaa, 0xe0, 0xe3, 0x7d, 0xe2, 0x7e, 0x06, 0xd2, 0xec, 0xc3, 0x83,
        0xe4, 0xe6, 0x37, 0x61, 0x27, 0x8b, 0x32, 0x29, 0xf8, 0xad, 0x2c, 0x56, 0x57, 0xad, 0xcc,
        0x13, 0xa4, 0x1f, 0xcb, 0x6a, 0x49, 0x8b, 0x8e, 0x11, 0xe6, 0x1f, 0xc0, 0x5e, 0xda, 0xa6,
        0xdc, 0x88, 0x82, 0x55, 0x72, 0xc1, 0x88, 0xdc, 0x77, 0x37, 0xa5, 0xda, 0x6e, 0x71, 0xd5,
        0xe0, 0xf1, 0x00, 0x8a, 0xa8, 0x20, 0xa7, 0xb7, 0x47, 0x6f, 0x8e, 0x61, 0x41, 0xa8, 0x92,
        0xc6, 0xb0, 0x07, 0x39, 0x9e, 0xf3, 0x34, 0x3f, 0x96, 0xca, 0x42, 0x8b, 0x97, 0xef, 0xd7,
        0xa7, 0x98, 0xcd, 0xb0, 0xe4, 0x75, 0x52, 0x47, 0x5f, 0x0b, 0x6e, 0xbd, 0x4d, 0xde, 0x3f,
        0x49, 0x34, 0x3f, 0x15, 0xe4, 0x52, 0x02, 0xf9, 0x4e, 0x73, 0x03, 0xd8, 0xe7, 0xf0, 0x50,
        0xee, 0x67, 0xd1, 0x8e, 0xa3, 0x66, 0x77, 0x23, 0xa0, 0x39, 0xee, 0x01, 0x40, 0x41, 0x24,
        0x41, 0x21, 0xbb, 0x35, 0xe5, 0x43, 0xf6, 0x8d, 0xd0, 0x74, 0x0b, 0xa8, 0xa9, 0xb5, 0x75,
        0xf5, 0x34, 0x55, 0xf7, 0x97, 0x72, 0xf8, 0x3a, 0x34, 0x2c, 0xcb, 0xf7, 0x21, 0xd8, 0x99,
        0x6d, 0x8b, 0xcd, 0xae, 0x48, 0xfc, 0x56, 0x72, 0xfd, 0x76, 0xe3, 0x85, 0x28, 0x35, 0x34,
        0x73, 0x6e, 0xb0, 0xe1, 0xeb, 0x69, 0xc1, 0x86, 0x6f, 0xb2, 0x87, 0xfa, 0xde, 0x71, 0xa9,
        0x65, 0x46, 0x60, 0xc1, 0x36, 0x80, 0x8e, 0x9c, 0x23, 0xc2, 0x47, 0xa1, 0xdb, 0x24, 0x0e,
        0x7f, 0xfc, 0x69, 0x8e, 0x20, 0x6b, 0xc3, 0x60, 0x2b, 0x6f, 0x5b, 0x39, 0x95, 0x87, 0xf4,
        0x07, 0x49, 0x19, 0xe9, 0xbe, 0xda, 0x05, 0x02, 0xd9, 0x5e, 0x2f, 0x14, 0x75, 0x81, 0xb9,
        0x81, 0xdc, 0x1d, 0x02, 0xe2, 0x01, 0x17, 0x5e, 0x08, 0xed, 0x5e, 0x75, 0xa2, 0xab, 0x75,
        0x08, 0x95, 0xde, 0x51, 0x92, 0x28, 0x83, 0x8d, 0x77, 0x31, 0xcb, 0x9e, 0x03, 0x6a, 0xe4,
        0xfb, 0x3b, 0xf9, 0xd7, 0xcb, 0xe4, 0xfc, 0x04, 0x47, 0xb2, 0x3d, 0x1e, 0xc9, 0xa7, 0xe9,
        0xff, 0x85, 0x69, 0xbb, 0xda, 0x49, 0xf2, 0x3d, 0xb1, 0xef, 0xc8, 0xf6, 0xc9, 0xf4, 0xb0,
        0x64, 0x7e, 0x03, 0xb1, 0xc3, 0xb7, 0xd6, 0x97, 0xd1, 0x9f, 0xf6, 0x55, 0x0c, 0xa9, 0x68,
        0x1d, 0xd7, 0x89, 0x25, 0x67, 0x7e, 0xa7, 0x50, 0x4f, 0x22, 0xb8, 0xbd, 0xbe, 0xa7, 0x74,
        0x73, 0x00, 0x80, 0x9f, 0x58, 0x3f, 0x2a, 0x18, 0x54, 0x59, 0x63, 0xf4, 0x07, 0xd3, 0x90,
        0xfd, 0xd4, 0x10, 0x0c, 0x85, 0xf5, 0xcf, 0x15, 0x8e, 0x40, 0xb6, 0xdf, 0x02, 0xda, 0xc6,
        0x85, 0xa4, 0xb1, 0xe2, 0xf1, 0xee, 0xda, 0x93, 0x25, 0xa6, 0xee, 0x8a, 0x20, 0x33, 0xd8,
        0x65, 0xfa, 0xb5, 0xd3, 0x3e, 0xa1, 0x3f, 0xb1, 0xe2, 0x8e, 0xb6, 0x0f, 0x13, 0x38, 0x35,
        0x05, 0x67, 0xa9, 0x8f, 0x21, 0x98, 0x65, 0x2f, 0x04, 0xc1, 0x2e, 0x8a, 0x9b, 0x74, 0xca,
        0xad, 0x5b, 0xee, 0x7d, 0xe3, 0xda, 0x47, 0xf9, 0xa3, 0x22, 0x6d, 0xaf, 0xdb, 0xf4, 0x57,
        0x16, 0x6d, 0x2c, 0xb6, 0x0b, 0xc2, 0x04, 0x97, 0xe6, 0x7d, 0x00, 0x6e, 0xd8, 0x41, 0x38,
        0xfc, 0x13, 0xb9, 0xf2, 0x1a, 0x22, 0x8e, 0x2e, 0x8e, 0x34, 0x47, 0x0e, 0xdc, 0x22, 0x8b,
        0x95, 0xcf, 0xf1, 0xde, 0x1d, 0x9b, 0xb8, 0x66, 0x30, 0x23, 0xb0, 0xd6, 0x2e, 0x63, 0xf2,
        0xd8, 0xbe, 0x11, 0x33, 0x2d, 0xd0, 0xdd, 0xe9, 0x56, 0x46, 0x83, 0xe1, 0xcf, 0x47, 0xf1,
        0x7a, 0x59, 0x11, 0xd5, 0x49, 0xaa, 0x9a, 0x39, 0x09, 0x03, 0xec, 0x79, 0x69, 0x88, 0x14,
        0x6b, 0x97, 0xfb, 0x5a, 0x6b, 0xc3, 0x4a, 0xfc, 0x64, 0x81, 0xf0, 0x7c, 0x7f, 0xe0, 0x78,
        0x2f, 0xb8, 0x1b, 0x0e, 0x3d, 0x32, 0x9a, 0x5c, 0x92, 0x10, 0xf6, 0x63, 0x3c, 0xe1, 0x9e,
        0xc7, 0x51, 0xf4, 0xc7, 0x76, 0x78, 0x31, 0x80, 0xc1, 0x2f, 0x7c, 0x22, 0x7d, 0xcb, 0xee,
        0xd9, 0x2b, 0xa1, 0x35, 0x90, 0x1f, 0x62, 0x39, 0xa5, 0x54, 0x56, 0x33, 0xf0, 0x81, 0xb5,
        0x5d, 0xf3, 0xa3, 0x32, 0xcc, 0xcb, 0x69, 0x23, 0x0b, 0xa8, 0x48, 0x07, 0xc6, 0x6b, 0x15,
        0x91, 0x85, 0xb0, 0xd3, 0x4d, 0x7c, 0x91, 0x22, 0xe2, 0x6d, 0x4b, 0xed, 0x1c, 0xac, 0xf5,
        0xde, 0x34, 0xf1, 0x2d, 0xfa, 0x2c, 0xa3, 0x53, 0x2a, 0xea, 0x8d, 0x91, 0x08, 0x71, 0x62,
        0xf4, 0x4f, 0xcb, 0x8f, 0x60, 0xb1, 0x55, 0x05, 0x3c, 0xa3, 0xaa, 0x43, 0xac, 0xe7, 0x3e,
        0x14, 0x18, 0xc2, 0x4f, 0xcf, 0xe7, 0x0c, 0xe9, 0xda, 0xb5, 0xf4, 0xbc, 0x82, 0x25, 0xfc,
        0x68, 0x4d, 0x71, 0x5d, 0x13, 0x49, 0x18, 0x4e, 0x09, 0x37, 0xd8, 0x9f, 0xd4, 0xf3, 0x09,
        0x7e, 0x85, 0xf7, 0xe7, 0x8b, 0x76, 0x03, 0xc5, 0x38, 0x75, 0x00, 0x01, 0xe6, 0x6b, 0x2f,
        0xba, 0x48, 0xf6, 0xed, 0x3e, 0x51, 0x72, 0xdd, 0x64, 0x76, 0x34, 0xaa, 0x86, 0x3b, 0xf2,
        0x6e, 0x3c, 0x89, 0x63, 0xbe, 0x97, 0xaf, 0x05, 0x06, 0x71, 0x85, 0x0b, 0x13, 0x56, 0xab,
        0xf6, 0x1e, 0x6b, 0x5c, 0x76, 0xdd, 0x6b, 0xdc, 0x97, 0x9a, 0x62, 0x9a, 0x24, 0xf3, 0xe5,
        0xb8, 0xfa, 0x20, 0x90, 0x4f, 0x11, 0x2a, 0x08, 0xad, 0xc6, 0xcf, 0x27, 0xe0, 0x69, 0x5a,
        0x50, 0xe0, 0xa5, 0xf1, 0x36, 0xcb, 0x4c, 0x3c, 0xa5, 0xf0, 0x34, 0x68, 0x59, 0x7d, 0x9e,
        0x2e, 0x89, 0xe7, 0xfc, 0x58, 0x68, 0xbe, 0x30, 0x24, 0x97, 0xe5, 0x66, 0x24, 0x2f, 0x86,
        0x0b, 0xe9, 0xec, 0xa9, 0x59, 0xf1, 0x84, 0x28, 0x5e, 0x89, 0x57, 0xcb, 0x2f, 0x90, 0xa4,
        0x8f, 0xab, 0x26, 0x50, 0xfa, 0xe1, 0x54, 0x5c, 0xff, 0xef, 0xa6, 0x55, 0x82, 0x1a, 0x81,
        0xe5, 0xc4, 0x3a, 0x33, 0x11, 0x86, 0x49, 0x02, 0x5f, 0x51, 0x8d, 0xa5, 0xf4, 0x6e, 0x5c,
        0xb2, 0xdc, 0x09, 0x5a, 0xfe, 0x18, 0x58, 0x5f, 0xab, 0x88, 0x89, 0x89, 0x03, 0x17, 0xc6,
        0xf6, 0x2a, 0x24, 0xf6, 0x9f, 0x28, 0x23, 0xea, 0x81, 0xd3, 0x9f, 0xd5, 0x9d, 0x3d, 0x51,
        0xae, 0x8a, 0x8a, 0x3d, 0xd9, 0xd7, 0x52, 0x6f, 0x78, 0x1f, 0x51, 0x3d, 0x12, 0x6a, 0xc7,
        0x6c, 0xc4, 0x00, 0xaf, 0xed, 0x01, 0x89, 0xf6, 0x80, 0xde, 0x90, 0xb5, 0x71, 0x08, 0x63,
        0x8c, 0x91, 0xe0, 0x91, 0x89, 0x30, 0x9c, 0x20, 0x05, 0x77, 0x81, 0x78, 0xb4, 0x99, 0x9f,
        0x80, 0x1f, 0xd8, 0x9f, 0xc1, 0xb6, 0x2e, 0x0c, 0x17, 0x11, 0x58, 0xba, 0x62, 0x90, 0x77,
        0x3c, 0x43, 0x44, 0x45, 0x4c, 0x87, 0xf1, 0x1a, 0xb5, 0xac, 0xc0, 0xa1, 0x9f, 0x80, 0x84,
        0x42, 0x13, 0x2e, 0x9f, 0xfa, 0x19, 0xc6, 0x15, 0xbd, 0x23, 0xb5, 0xed, 0xc0, 0x23, 0xcc,
        0x3e, 0xd5, 0x7f, 0xd9, 0x02, 0x4c, 0x37, 0x62, 0x44, 0xa3, 0x05, 0xaf, 0xac, 0x1f, 0xa1,
        0xff, 0x4b, 0xd3, 0xc6, 0xd9, 0xdd,
    ];
}
